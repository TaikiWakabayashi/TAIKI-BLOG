{"pageProps":{"title":"Express.js + Typescriptの設定方法","publish":"2023-07-23T13:30:00.000Z","content":"<p>Express.js + Typescriptの初期設定方法についてまとめました。</p><h2 id=\"h67d2b7be6b\">バージョン</h2><div data-filename=\"package.json\"><pre><code class=\"language-javascript\">  &quot;dependencies&quot;: {\n    &quot;@types/express&quot;: &quot;^4.17.17&quot;,\n    &quot;@types/node&quot;: &quot;^20.4.2&quot;,\n    &quot;express&quot;: &quot;^4.18.2&quot;,\n    &quot;typescript&quot;: &quot;^5.1.6&quot;\n    &quot;ts-node&quot;: &quot;^10.9.1&quot;\n}</code></pre></div><p></p><p></p><h2 id=\"h7e3a52fc06\">インストール手順</h2><h5 id=\"ha909cdc4a5\">・express.js</h5><pre><code>npm install express</code></pre><p></p><h5 id=\"h99700d3806\">・Typescript + ts-node</h5><pre><code>npm install -d typescript @types/node ts-node</code></pre><p></p><h5 id=\"h5baa14591c\">・express.jsの型定義</h5><pre><code>npm install @types/express</code></pre><p></p><h5 id=\"h4d5c0e537d\">・tsconfig.jsonの作成</h5><pre><code>npx tsc --init</code></pre><p></p><p></p><h2 id=\"hd684ff74ee\">ルーティング設定</h2><div data-filename=\"app.ts\"><pre><code class=\"language-typescript\">import express from &quot;express&quot;;\n\n\nconst app: express.Express = express();\n// port\nconst PORT = 3000;\n\n\n// response用Jsonデータ\nconst users = [\n  { id: 1, name: &quot;User1&quot;, email: &quot;user1@test.local&quot; },\n  { id: 2, name: &quot;User2&quot;, email: &quot;user2@test.local&quot; },\n  { id: 3, name: &quot;User3&quot;, email: &quot;user3@test.local&quot; },\n];\n\n\napp.get(&quot;/sample&quot;, (req: express.Request, res: express.Response) =&gt; {\n  res.send(JSON.stringify(users));\n});\n\n\napp.listen(PORT, () =&gt; {\n  console.log(`Example app listening on port ${PORT}`);\n});</code></pre></div><p></p><p></p><h4 id=\"h49834616fc\"><strong><em><u>getメソッド</u></em></strong></h4><p>第一引数にエンドポイント、第二引数にコールバック関数を設定。</p><p>コールバック関数は第一引数にリクエスト、第二引数にレスポンスを入れる。関数内にはエンドポイントにアクセスした時の実行内容を記載する。</p><p></p><p></p><h4 id=\"h4614002266\"><strong><em><u>listenメソッド</u></em></strong></h4><p>第一引数にPort番号、第二引数にコールバック関数を設定。</p><p>コールバック関数には、ポートにアクセスした時に実行される処理内容を記載する。</p><p></p><p></p><h2 id=\"h7605dc6208\">参考文献</h2><ul><li><a href=\"https://zenn.dev/chida/articles/882d9fb1d71fa1\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Typescript</a></li></ul><p></p><p></p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a205c063731d4c97a0b9e86582ae6751/5a8a3074ef2d4cdc80c8705078269f48/Express.js%20%C3%97%20Typescript.png","height":720,"width":1280},"categories":{"id":"design","createdAt":"2023-07-08T10:34:38.230Z","updatedAt":"2023-07-08T10:37:26.802Z","publishedAt":"2023-07-08T10:34:38.230Z","revisedAt":"2023-07-08T10:37:26.802Z","name":"エンジニア","slug":"engineer"},"cardDatas":[{"url":"https://zenn.dev/chida/articles/882d9fb1d71fa1","title":"ExpressとTypeScriptの環境構築","description":"","image":"https://res.cloudinary.com/zenn/image/upload/s--QYmfhXxk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Express%25E3%2581%25A8TypeScript%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TC%2Cx_203%2Cy_98/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I1YzYwN2JiMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_72/og-base.png"}]},"__N_SSG":true}